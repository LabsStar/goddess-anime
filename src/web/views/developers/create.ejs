<!DOCTYPE html>
<html lang="en">
<head>
	    <title> Goddess Anime Cards :: Developer Applications </title>
    <meta property="og:type" content="website">
    <meta property="og:site_name" content="Goddess Anime Cards">
    <meta property="og:title" content="Goddess Anime Cards">
    <meta property="og:description" content="View all of the applications you have made for Goddess Anime Cards.">
    <meta property="og:image"
        content="https://rare-gallery.com/mocahbig/451099-anime-c-programming-New-Game-blue-eyes-blonde.jpg">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="Goddess Anime Cards">
    <meta name="twitter:creator" content="Goddess Anime Cards">
    <meta name="twitter:card" content="summary_large_image">
    <meta content="#52FF33" data-react-helmet="true" name="theme-color" />
</head>
<body>
    <%- include ("../templates/header.ejs") %> 
	<!-- main content -->
	<main class="main">
		<div class="container">
			<div class="row row--grid">
				<!-- breadcrumb -->
				<div class="col-12">
					<ul class="breadcrumb">
						<li class="breadcrumb__item"><a href="/">Home</a></li>
						<li class="breadcrumb__item">Developers</li>
						<li class="breadcrumb__item breadcrumb__item--active">Application</li>
					</ul>
				</div>
				<!-- end breadcrumb -->

				<!-- title -->
				<div class="col-12 col-xl-9">
					<!-- title -->
					<div class="main__title main__title--create">
						<h2>Create Application</h2>
					</div>
					<!-- end title -->

					<!-- create form -->
					<form action="/create" class="sign__form sign__form--create" method="post">
						<div class="row">

							<div class="col-12">
								<div class="sign__file">
									<label id="file1" for="sign__file-upload">e. g. Image</label>
									<input data-name="#file1" id="sign__file-upload" name="file" class="sign__file-upload" type="file" accept=".png,.jpg">
								</div>
							</div>

							<div class="col-12">
								<div class="sign__group">
									<label class="sign__label" for="name">Name</label>
									<input id="name" type="text" name="name" class="sign__input" placeholder="e. g. 'Good Bot'">
								</div>
							</div>

							<div class="col-12">
								<div class="sign__group">
									<label class="sign__label" for="callBackUrl">Callback URL</label>
									<input id="callBackUrl" type="text" name="callBackUrl" class="sign__input" placeholder="e. g. 'https://example.com/callback'">
								</div>
							</div>

							<div class="col-12">
								<div class="sign__group">
									<label class="sign__label" for="description">Description</label>
									<textarea id="description" name="description" class="sign__textarea" placeholder="e. g. 'This can do...'"></textarea>
								</div>
							</div>

							<div class="col-12">
								<h4 class="sign__title">
									Intents
								</h4>
							</div>


							<div class="col-12">
								<div class="sign__group sign__group--row">
									<ul class="sign__radio sign__radio--single">
										
										<li>
											<input id="needsUserData" type="checkbox" name="needsUserData" value="true">
											<label for="needsUserData">Needs User Data</label>
										</li>
										<li>
											<input id="needsGuildData" type="checkbox" name="needsGuildData" value="true">
											<label for="needsGuildData">Needs Guild Data</label>
										</li>
										<li>
											<input id="needsBotData" type="checkbox" name="needsBotData" value="true">
											<label for="needsBotData">Needs Bot Data</label>
										</li>
									</ul>
								</div>
							</div>

							<div class="col-12 col-xl-3">
								<button type="button" class="sign__btn">Create App</button>
							</div>
						</div>
					</form>
					<!-- end create form -->
				</div>
			</div>
		</div>
	</main>

	<div id="team-modal" class="zoom-anim-dialog mfp-hide modal modal--form">
		<button class="modal__close" type="button"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13.41,12l4.3-4.29a1,1,0,1,0-1.42-1.42L12,10.59,7.71,6.29A1,1,0,0,0,6.29,7.71L10.59,12l-4.3,4.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L12,13.41l4.29,4.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42Z"/></svg></button>

		<h4 class="sign__title">Our Team</h4>

		<p class="modal__text">
            Check out our team members and support them!
        </p>

        <% team.forEach(teamMember => { %>
            <a href="<%= teamMember.link %>" class="modal__wallet">
                <img src="<%= teamMember.image %>" alt="<%= teamMember.name %>">
                <span><%= teamMember.name %></span>
            </a>
        <% }) %>

		

		
	</div>
	
	
	
	
	<!-- end main content -->
    <%- include ("../templates/footer.ejs") %> 

    <script>
		const appName = document.getElementById("name");
		const appDescription = document.getElementById("description");
		const needsUserData = document.getElementById("needsUserData");
		const needsGuildData = document.getElementById("needsGuildData");
		const needsBotData = document.getElementById("needsBotData");
		const callBackUrl = document.getElementById("callBackUrl");
		const image = document.querySelector(".sign__file-upload");

		const createButton = document.querySelector(".sign__btn");

		let imageSrc = null;


		image.addEventListener("change", () => {
			// Get the data from the input
			const file = image.files[0];
			const reader = new FileReader();

			// Read the file
			reader.readAsDataURL(file);

			// When it's loaded, set the image source

			reader.onload = () => {
				console.log("Image loaded")
				imageSrc = reader.result;
			};




		});
		

		createButton.addEventListener("click", () => {
			let needsUserDataValue = false;
			let needsGuildDataValue = false;
			let needsBotDataValue = false;

			if (needsUserData.checked) {
				
				needsUserDataValue = true;
			}

			if (needsGuildData.checked) {
				needsGuildDataValue = true;
			}

			if (needsBotData.checked) {
				needsBotDataValue = true;
			}

			const data = {
				name: appName.value,
				description: appDescription.value,
				needsUserData: needsUserDataValue,
				needsGuildData: needsGuildDataValue,
				needsBotData: needsBotDataValue,
				callBackUrl: callBackUrl.value,
				owner: {
					id: '<%= user?.id %>'
				}
			}

			for (const key in data) {
				if (data[key] === "") {
					return alert("Please fill out all fields");
				}
			}

			if (imageSrc) {
				data.image = imageSrc;
			}
			else {
				return alert("Please upload an image");
			}

			fetch("/api/create/application", {
				method: "POST",
				headers: {
					"Content-Type": "application/json"
				},
				body: JSON.stringify(data)
			})
			.then(res => res.json())
			.then(data => {
				if (data.message) {
					window.location.href = "/developers/applications";
				} else if (data.error) {
					alert(data.error);
				}
			})
			.catch(err => {
				console.log(err);
			})
		})
    </script>
    
</body>
</html>