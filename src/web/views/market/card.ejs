<!DOCTYPE html>
<html lang="en">
<head>
	<title>
        Goddess Anime Cards :: Cards
    </title>
     <meta property="og:type" content="website">
    <meta property="og:site_name" content="Goddess Anime Cards">
    <meta property="og:title" content="<%= card.name %>">
    <meta property="og:description" content="<%= card.tagLine %>">
    <meta property="og:image" content="<%= card.image %>">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="Goddess Anime Cards">
    <meta name="twitter:creator" content="Goddess Anime Cards">
    <meta name="twitter:card" content="summary_large_image">
    <meta content="#43B581" data-react-helmet="true" name="theme-color" />
    
    <style>
        button[disabled] {
            cursor: not-allowed;
            opacity: 0.5;
        }
    </style>
</head>
<body>
    <%- include ("../templates/header.ejs") %> 
	<!-- main content -->
	<main class="main">
		<div class="container">
			<div class="row row--grid">
				<!-- breadcrumb -->
				<div class="col-12">
					<ul class="breadcrumb">
						<li class="breadcrumb__item"><a href="/">Home</a></li>
						<li class="breadcrumb__item">Card</li>
						<li class="breadcrumb__item breadcrumb__item--active" id="crumb_name"><%= card.name %></li>
					</ul>
				</div>
				<!-- end breadcrumb -->

				<!-- title -->
				<div class="col-12">
					<div class="main__title main__title--page">
						<h1>
                            <%= card.name %>
                        </h1>
					</div>
				</div>
				<!-- end title -->
			</div>

			<div class="row">
				<!-- content -->
				<div class="col-12 col-xl-8">
					<div class="asset__item">
						<a class="asset__img" href="<%= card.image %>">
                            <img src="<%= card.image %>" alt="Card" width="512" height="512" id="card">
                        </a>
					</div>
				</div>
				<!-- end content -->

                <!-- sidebar -->
                <div class="col-12 col-xl-4">
                    <div class="asset__info">
                        <div class="asset__desc">
                            <h2>
                                Description
                            </h2>
                            <p>
                                <%= card.description %>
                            </p>
                        </div>

                        <ul class="asset__users">
                            <li>
                                <span>
                                    <i>
                                        <%= card.tagLine %>
                                    </i>
                                </span>

                            </li>
                        </ul><!-- tabs -->
						

						<div class="asset__wrap">


							<div class="asset__price">
								<img src="https://cdn.discordapp.com/attachments/1093655688431013909/1110627110298583130/1824_coin.png" alt="Coin" title="Coin">
								<p>Price</p>
								<span><%= card.price %></span>
							</div>
						</div>

						<!-- actions -->
						<div class="asset__btns">
							<a href="#buy-card" class="asset__btn asset__btn--full asset__btn--clr open-modal">Buy</a>
						</div>
						
						<!-- end actions -->
					</div>
				</div>
				<!-- end sidebar -->


				
			</div>

			
		</div>
	</main>

	
	
	
	
    <!-- Buy Card Modal -->

    <div id="buy-card" class="zoom-anim-dialog mfp-hide modal modal--form">
		<button class="modal__close" type="button"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13.41,12l4.3-4.29a1,1,0,1,0-1.42-1.42L12,10.59,7.71,6.29A1,1,0,0,0,6.29,7.71L10.59,12l-4.3,4.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L12,13.41l4.29,4.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42Z"/></svg></button>

		<h4 class="sign__title">
            Sorry!
        </h4>

		<p class="modal__text">
            This feature is not yet available.
        </p>

		
	</div>
	
	<!-- end main content -->
    <%- include ("../templates/footer.ejs") %> 

    <script>
        const cardImg = document.getElementById('card');

        // When cardImg is hovered over, scale the image
        cardImg.addEventListener('mousemove', () => {
           // perspective(600px) rotateX(0deg) rotateY(0deg) scale(1)
           
           // Get the mouse position
              const mousePos = {
                x: event.clientX,
                y: event.clientY
              }

                // Get the card position
                const cardPos = {
                    x: cardImg.getBoundingClientRect().left,
                    y: cardImg.getBoundingClientRect().top
                }

                // Get the mouse position relative to the card
                const mousePosRelative = {
                    x: mousePos.x - cardPos.x,
                    y: mousePos.y - cardPos.y
                }

                cardImg.style.transform = 'perspective(600px) rotateX(' + (mousePosRelative.y - 256) / 256 * 10 + 'deg) rotateY(' + (mousePosRelative.x - 256) / 256 * -10 + 'deg) scale(1.1)';


        });

        // When cardImg is not hovered over, reset the image
        cardImg.addEventListener('mouseleave', () => {
            // Add a ease-in transition
            cardImg.style.transition = 'transform 0.5s ease-in-out';
            cardImg.style.transform = 'perspective(600px) rotateX(0deg) rotateY(0deg) scale(1)';

            // Remove the transition after 0.5s
            setTimeout(() => {
                cardImg.style.transition = 'none';
            }, 500);
        });
    </script>
    
</body>
</html>